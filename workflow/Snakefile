# Main entrypoint of the workflow.
# Please change the rule all to to your needs (blast or sintax or both, 97 or 99% similarity, etc.)
# You can get both sintax and blast annotation by adding the corresponding output in the rule all.
import os
import re
from snakemake.utils import min_version

min_version("7.18.2")

configfile: "config/config.yaml"

include: "rules/common.smk"
include: "rules/01-concatenate_fastq.smk"
include: "rules/02-filtering.smk"
include: "rules/03-clustering.smk"
include: "rules/04-mapping.smk"
include: "rules/05-polish_racon.smk"
include: "rules/06-relabel.smk"
include: "rules/07-clustering_identity.smk"
include: "rules/08-taxonomy.smk"
include: "rules/09-fix_otu_table.smk"
include: "rules/10-prep_for_ampvis2.smk" # <- shouldn't be necessary, amp_load() reads sintax files directly, see "taxonomy" here https://kasperskytte.github.io/ampvis2/reference/amp_load.html#arguments-1
include: "rules/11-prep_for_phyloseq.smk"
include: "rules/12-phyloseq_abund_blast.smk"
## Function to generate output files for "rule all" are defined in the common.smk file
rule all:
    input:
        prepare_inputs()

